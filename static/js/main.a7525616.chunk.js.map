{"version":3,"sources":["constants.js","helpers.js","madlibs.js","components/Question.js","components/Button.js","components/Questionnaire.js","components/Edit.js","components/App.js","index.js"],"names":["FIELD_NAMES","COPY","FIELDS","VIEWS","getRandomTemplateIndex","fieldName","Math","floor","random","getTextTemplates","length","INITIAL_STATE","fieldOrder","fieldAnswers","essayText","view","counter","clearEssay","type","Question","props","state","input","handleBlur","bind","handleChange","e","this","setState","target","value","id","answer","dispatch","field","payload","className","question","name","onChange","onBlur","Component","connect","Button","preventDefault","hasOwnProperty","actionBeforeClick","onClick","handleClick","buttonText","Questionnaire","onSubmit","map","key","dangerouslySetInnerHTML","__html","Object","keys","Edit","essay","replace","require","App","document","addEventListener","event","keyCode","nodeName","form","next_index","Array","prototype","indexOf","call","submitbutton","getElementsByTagName","elements","focus","store","createStore","action","updatedFieldAnswers","assign","userInput","templateIndex","newEssayText","filter","join","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.a7525616.chunk.js","sourcesContent":["export const FIELD_NAMES = {\n  hometown: \"hometown\",\n  favoriteFood: \"favoriteFood\",\n  loveToDo: \"loveToDo\",\n  music: \"music\",\n  messageIf: \"messageIf\",\n  bar: \"bar\",\n};\n\nexport const COPY = {\n  [FIELD_NAMES.hometown]: \"Where did you grow up?\",\n  [FIELD_NAMES.favoriteFood]: \"What’s your favorite food?\",\n  [FIELD_NAMES.loveToDo]: \"What do you LOVE to do?\",\n  [FIELD_NAMES.messageIf]: \"People should message you if they...\",\n  [FIELD_NAMES.music]: \"What’s the last musician or band you got into?\",\n  [FIELD_NAMES.bar]: \"What’s your favorite watering hole?\",\n};\n\nexport const FIELDS = {\n  [FIELD_NAMES.hometown]: COPY[FIELD_NAMES.hometown],\n  [FIELD_NAMES.favoriteFood]: COPY[FIELD_NAMES.favoriteFood],\n  [FIELD_NAMES.loveToDo]: COPY[FIELD_NAMES.loveToDo],\n  [FIELD_NAMES.messageIf]: COPY[FIELD_NAMES.messageIf],\n  [FIELD_NAMES.music]: COPY[FIELD_NAMES.music],\n  [FIELD_NAMES.bar]: COPY[FIELD_NAMES.bar],\n};\n\nexport const VIEWS = {\n  QUESTIONNAIRE: \"QUESTIONNAIRE\",\n  EDIT: \"EDIT\"\n};","import { FIELD_NAMES } from \"./constants\";\n\nexport function getRandomTemplateIndex(fieldName){\n  return Math.floor( \n    Math.random() * getTextTemplates(fieldName).length\n  )\n}\n\nexport function getTextTemplates(fieldName) {\n  switch (fieldName) {\n    case FIELD_NAMES.hometown: {\n      return [\n        \"Grew up in $answer.\",\n        \"Hail from $answer.\",\n        \"$answer born and bred.\",\n        \"$answer, born and raised.\",\n        \"Transplant from $answer.\",\n        \"$answer native.\",\n        \"Originally from $answer.\",\n      ];\n    }\n\n    case FIELD_NAMES.favoriteFood: {\n      return [\n        \"Can’t get enough $answer.\",\n        \"Addicted to $answer.\",\n        \"Obsessed with $answer.\",\n        \"Love going out for $answer.\",\n        \"Love eating $answer.\",\n        \"Can’t live without $answer.\",\n        \"$answer please.\",\n      ];\n    }\n\n    case FIELD_NAMES.bar: {\n      return [\n        \"$answer is my old haunt.\",\n        \"$answer is my Cheers.\",\n        \"$answer is my Paddy’s Pub.\",\n        \"You can always catch me at $answer.\",\n        \"Take me to $answer and I’ll marry you right now.\",\n        \"$answer is my spot.\",\n        \"$answer is my home-away-from-home.\",\n      ];\n    }\n\n    case FIELD_NAMES.loveToDo: {\n      return [\n        \"I $answer constantly.\",\n        \"Love to $answer.\",\n        \"Can never $answer enough.\",\n        \"I $answer whenever I get the chance.\",\n        \"In my spare time I $answer.\",\n      ];\n    }\n\n    case FIELD_NAMES.music: {\n      return [\n        \"I just got into $answer.\",\n        \"Been jamming to $answer recently.\",\n        \"I’d kill to see $answer live.\",\n        \"Love listening to $answer.\",\n        \"$answer is my new obsession.\",\n        \"$answer is my new god.\",\n      ];\n    }\n\n    case FIELD_NAMES.messageIf: {\n      return [\n        \"Message if you $answer.\",\n        \"Hit me up if you $answer.\",\n        \"If you $answer, we need to meet.\",\n        \"Send me a message if you $answer.\",\n        \"If you $answer, let’s chat.\",\n      ];\n    }\n\n    default:\n      return [];\n  }\n}\n","import {\n  FIELD_NAMES,\n  VIEWS\n} from \"./constants\";\nimport {\n  getRandomTemplateIndex,\n  getTextTemplates\n} from './helpers.js';\n\n\n// Action types\n// ----------------------------------------------------------------------------\n\nexport const SUBMIT_FIELD = \"MADLIBS.SUBMIT_FIELD\";\nexport const INCREMENT_COUNTER = \"MADLIBS.INCREMENT_COUNTER\";\nexport const TOGGLE_VIEW = \"MADLIBS.TOGGLE_VIEW\";\nexport const CLEAR_ESSAY = \"MADLIBS.CLEAR_ESSAY\";\n\n\n// Initial state\n// ----------------------------------------------------------------------------\n\nexport const INITIAL_STATE = {\n  fieldOrder: [\n    FIELD_NAMES.hometown,\n    FIELD_NAMES.favoriteFood,\n    FIELD_NAMES.loveToDo,\n    FIELD_NAMES.music,\n    FIELD_NAMES.messageIf,\n    FIELD_NAMES.bar,\n  ],\n  fieldAnswers: {},\n  essayText: \"\",\n  view: VIEWS.QUESTIONNAIRE,\n  counter: 1,\n};\n\n\n// Reducer\n// ----------------------------------------------------------------------------\n\nexport function reducer(state = INITIAL_STATE, action) {\n  switch (action.type) {\n    case SUBMIT_FIELD: {\n      var updatedFieldAnswers = Object.assign( state.fieldAnswers,\n          { [action.payload.fieldName] : {\n              userInput: action.payload.answer,\n              templateIndex: getRandomTemplateIndex(action.payload.fieldName)\n            }\n          }\n      );\n      var newEssayText = state.fieldOrder\n        .filter( field => updatedFieldAnswers.hasOwnProperty(field))\n        .map( field => {\n          var { userInput, templateIndex } = updatedFieldAnswers[field]; \n          return getTextTemplates(field)[templateIndex].replace(\"$answer\", \"<b>\" + userInput + \"</b>\") \n        }).join(\" \");\n\n      return { ...state, \n        fieldAnswers: updatedFieldAnswers,\n        essayText: newEssayText\n      }\n    }\n\n    case INCREMENT_COUNTER: {\n      return {\n        ...state,\n        counter: state.counter + 1,\n      };\n    }\n\n    case TOGGLE_VIEW: {\n      return {\n        ...state, \n        view: (\n          state.view === VIEWS.QUESTIONNAIRE ?\n          VIEWS.EDIT :\n          VIEWS.QUESTIONNAIRE\n        )\n      }\n    }\n\n    case CLEAR_ESSAY: {\n      return {\n        ...state,\n        essayText: \"\",\n        fieldAnswers: {}\n      }\n    }\n\n    default:\n      return state;\n  }\n}\n\n\n// Action creators\n// ----------------------------------------------------------------------------\n\nexport function submitField(id, answer) {\n  return { \n    type: SUBMIT_FIELD, \n    payload: { \n      fieldName: id,\n      answer \n    } \n  };\n}\n\nexport function increment() {\n  return { type: INCREMENT_COUNTER };\n}\n\nexport function toggleView(){\n  return { type: TOGGLE_VIEW };\n}\n\nexport function clearEssay(){\n  return { type: CLEAR_ESSAY }\n}\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { submitField } from '../madlibs.js';\n\nclass Question extends Component {\n  static propTypes = {\n    dispatch: PropTypes.func.isRequired,\n    field: PropTypes.string.isRequired,\n    question: PropTypes.string.isRequired\n  };\n\n  constructor(props){\n    super(props);\n    this.state = { input: \"\" };\n    this.handleBlur = this.handleBlur.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(e) {\n    this.setState({ input: e.target.value });\n  }\n\n  handleBlur(){\n    if(this.state.input && this.state.input.length > 0)\n      this.props.dispatch(\n        submitField(this.props.field, this.state.input)\n      );\n  }\n\n  render() {\n    return (\n      <div className=\"question\">\n        <p>{this.props.question}</p>\n        <input \n          type=\"text\"\n          name={this.props.field}\n          value={this.state.input}\n          onChange={this.handleChange}\n          onBlur={this.handleBlur} />\n      </div>\n    );\n  }\n}\n\nexport default connect()(Question);\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { toggleView } from '../madlibs.js';\n\nclass Button extends Component {\n  static propTypes = {\n    dispatch: PropTypes.func.isRequired,\n    buttonText: PropTypes.string.isRequired,\n    actionBeforeClick: PropTypes.func\n  };\n\n\n  handleClick(e){\n    e.preventDefault();\n    if( this.props.hasOwnProperty( \"actionBeforeClick\" ) )\n      this.props.dispatch( this.props.actionBeforeClick() )\n    this.props.dispatch( toggleView() );\n  }\n\n  render() {\n    return (\n      <div>\n        <button onClick={this.handleClick.bind(this)}>{this.props.buttonText}</button> \n      </div>\n    );\n  }\n}\n\nexport default connect()(Button);\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport Question from './Question.js';\nimport Button from './Button.js';\nimport { FIELDS } from '../constants.js';\n\nclass Questionnaire extends Component {\n  static propTypes = {\n    fieldOrder: PropTypes.array.isRequired,\n    fieldAnswers: PropTypes.object.isRequired,\n    essayText: PropTypes.string\n  };\n\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"column left off-color-bkg\">\n          <div className=\"column-inner\">\n\n            <h3>About Me</h3>\n\n            <form onSubmit={(e) => e.preventDefault() }>\n              { this.props.fieldOrder.map( field => \n                <Question\n                  key={field}\n                  field={field}\n                  question={FIELDS[field]} />\n                ) \n              }\n            </form>\n\n          </div>\n        </div>\n        <div className=\"column right\">\n          <div className=\"column-inner\">\n\n            <h3>Your essay text</h3>\n\n            <div className=\"essay-preview\" dangerouslySetInnerHTML={{__html: this.props.essayText}} />\n            { \n              this.props.fieldOrder.length === Object.keys(this.props.fieldAnswers).length ?\n                <Button buttonText=\"Edit\" /> :\n                <div />\n            }\n\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    fieldOrder: state.fieldOrder,\n    fieldAnswers: state.fieldAnswers,\n    essayText: state.essayText\n  };\n}\n\nexport default connect(mapStateToProps)(Questionnaire);\n","import React, { Component } from \"react\";\nimport Button from './Button.js';\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { clearEssay } from '../madlibs.js';\n\nclass Edit extends Component {\n  static propTypes = {\n    essayText: PropTypes.string,\n  };\n\n  constructor(props){\n    super(props);\n    this.state = { essay: this.props.essayText.replace(/<b>|<\\/b>/g, '') } ;\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(e){\n    this.setState({ essay: e.target.value });\n  }\n\n  render() {\n    return (\n      <div className=\"container off-color-bkg center\">\n        <div className=\"column\">\n          <div className=\"column-inner essay\">\n\n            <h3>Your essay text</h3>\n\n            <textarea\n              value={this.state.essay}\n              onChange={this.handleChange} />\n            <Button\n              buttonText=\"Start Over\"\n              actionBeforeClick={clearEssay} />\n              \n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return { essayText: state.essayText };\n}\n\nexport default connect(mapStateToProps)(Edit);\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { VIEWS } from '../constants.js';\nimport { connect } from \"react-redux\";\nimport Questionnaire from './Questionnaire.js';\nimport Edit from './Edit.js';\nrequire(\"./App.scss\");\n\nclass App extends Component {\n   static propTypes = {\n     view: PropTypes.string.isRequired\n  };\n\n  componentDidMount(){\n    // Added in handling for ENTER key to mirror TAB default click handling\n    document.addEventListener('keydown', function (event) {\n      if (event.keyCode === 13 && event.target.nodeName === 'INPUT') {\n        event.preventDefault();\n        var form = event.target.form,\n            next_index = Array.prototype.indexOf.call(form, event.target) + 1;\n        var submitbutton = document.getElementsByTagName('button')[0];\n        if(next_index >= form.elements.length)\n          if(submitbutton) {\n            submitbutton.focus();\n            return;\n          } else\n            next_index = 0;\n        form.elements[next_index].focus();\n      }\n    });\n  }\n\n  render() {\n    switch (this.props.view) {\n      case VIEWS.EDIT:\n        return (<Edit />)\n      case VIEWS.QUESTIONNAIRE:\n      default: \n        return (<Questionnaire />)\n    }\n  }\n}\n\nfunction mapStateToProps(state) {\n  return { view: state.view }\n}\n\nexport default connect(mapStateToProps)(App);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { createStore } from \"redux\";\nimport { reducer } from \"./madlibs\";\n\nimport App from \"./components/App\";\n\nconst store = createStore(reducer);\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\"),\n);\n"],"sourceRoot":""}